// Ansible generated this file from {{ template_path }}; do not edit locally!
{# If this comment is present, this is the template file: disregard this warning #}

dataSource {
{% if inventory.get('tomcat').get('jdk') != "zulu7" %}
    properties {
        dbProperties {
            /*
             * Under Java 8+ (Grails 3+), we can configure JDBC driver settings in this block.
             *
             * https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html
             * https://docs.grails.org/3.0.x/guide/conf.html#dataSource
             */
            autoSlowLog = {{ ('dev' in group_names or 'stg' in group_names) | string | lower }}
            dumpQueriesOnException = true
            enabledTLSProtocols = 'TLSv1.3'
            explainSlowQueries = {{ ('dev' in group_names or 'stg' in group_names) | string | lower }}
            includeInnodbStatusInDeadlockExceptions = true
            includeThreadDumpInDeadlockExceptions = true
            includeThreadNamesAsStatementComment = true
            logSlowQueries = {{ ('dev' in group_names or 'stg' in group_names) | string | lower }}
            // https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-using-ssl.html
            sslMode = {{ 'REQUIRED' if 'localhost' in inventory.get('db_url', '') else 'VERIFY_IDENTITY' }}
        }
    }
{% endif %}
    dialect = org.hibernate.dialect.MariaDB103Dialect
    idleConnectionTestPeriod = 600
    password = "{{ vault.db_users.openboxes.password }}"
    preferredTestQuery = null
    testConnectionOnCheckin = true
    testConnectionOnCheckout = false
{% if inventory.get('db_url') %}
    url = "{{ inventory.db_url }}"
{% endif %}
    username = 'openboxes'
}

{% if inventory.get('google_analytics_web_property_id') %}
google.analytics.enabled = true
google.analytics.webPropertyID = "{{ inventory.google_analytics_web_property_id }}"
{% else %}
google.analytics.enabled = false
{% endif %}

google.api.key = "{{ vault.google_api_key }}"

grails.app.context = "{{ inventory.app_context }}"

// MailService.groovy
{% if inventory.get('grails', {}).get('send_mail') and inventory.get('mail') %}
grails.mail.bcc = "{{ inventory.mail.bcc | join(',') }}"
grails.mail.enabled = {{ inventory.grails.send_mail | string | lower }}
grails.mail.from = "{{ inventory.mail.sender }}"
grails.mail.host = "{{ inventory.mail.host }}"
grails.mail.password = "{{ vault.mail.password }}"
grails.mail.port = {{ inventory.mail.port }}
grails.mail.username = "{{ inventory.mail.username }}"
{% else %}
grails.mail.enabled = false
{% endif %}

grails.plugins.raven.active = false

grails.serverURL = "https://{{ ansible_fqdn }}{{ inventory.app_context }}"

hipaaspace.api.key = "{{ vault.hipaaspace_api_key }}"

openboxes.client.autosave.enabled = true  // OBPIH-5493

{% if 'dev' in group_names %}
openboxes.logo.label = 'testing'
{% elif 'stg' in group_names %}
openboxes.logo.label = 'staging'
{% endif %}

openboxes.logo.url = "https://{{ ansible_fqdn }}/images/pih_2020_logo.png"

{% if inventory.get('grails', {}).get('send_mail') and inventory.get('mail') %}
openboxes.mail.errors.enabled = true
openboxes.mail.errors.recipients = {{ inventory.mail.recipients }}
{% else %}
openboxes.mail.errors.enabled = false
{% endif %}

openboxes.megamenu.customLinks.enabled = true
openboxes.megamenu.customLinks.content = [
    [label: 'Request item creation', href: 'https://goo.gl/forms/x1red4Q7fL0ThH253', target: '_blank'],
    [label: 'Training Videos', href: 'https://openboxes.com/tutorials/', target: '_blank']
]
openboxes.megamenu.customLinks.menuItems = [
    [label: 'requestItemCreation.label', defaultLabel: 'Request item creation', href: 'https://goo.gl/forms/x1red4Q7fL0ThH253', target: '_blank'],
        [label: 'trainingVideos.label', defaultLabel: 'Training Videos', href: 'https://openboxes.com/tutorials/', target: '_blank']
]

openboxes.report.logo.url = "https://{{ ansible_fqdn }}/images/pih_2020_logo_full.png"

/*
 * Openboxes currently uses two different Quartz plugins depending on release.
 *
 * Grails 1-based releases use quartz2:2.1.6.2, which reads config from org.quartz.*
 * Grails 3-based releases use quartz:2.0.13, which reads config from quartz.*
 *
 * See OBS-1377 for more details, as well as https://github.com/9ci/grails-quartz2
 * and https://github.com/grails-plugins/grails-quartz.
 */

org.quartz.scheduler.instanceId = "{{ template_destpath }}"
quartz.scheduler.instanceId = "{{ template_destpath }}"
org.quartz.scheduler.instanceName = 'LegacyQuartzPool'
quartz.scheduler.instanceName = 'NewerQuartzPool'

{% if inventory.get('grails', {}).get('quartz_threads') %}
org.quartz.threadPool.threadCount = {{ inventory.grails.quartz_threads }}
quartz.threadPool.threadCount = {{ inventory.grails.quartz_threads }}
{% endif %}

org.quartz.threadPool.threadPriority = 1
quartz.threadPool.threadPriority = 1

server.contextPath = "{{ inventory.app_context }}"

/*
 * These fields, set in obnav.pih-emr.org:/opt/tomcat/.grails/openboxes-config.*,
 * override default values in grails-app/conf/Config.groovy but have little to
 * do with host-specific configuration. Once RIMU hosts are fully validated, we
 * should consider migrating them back to the main repository. OBS-1419
 */
hibernate.cache.use_second_level_cache = false
openboxes.cycleCount.additionalColumns = [
    'Physical lot/serial number': null,
    'Physical bin location': null,
    'Physical expiration date': null,
    'Physical quantity': null,
    'Was bin location updated in OpenBoxes?': null,
    'Was quantity, lot/serial, and expiration date updated in OpenBoxes?': null,
    'Comment': null,
]
openboxes.dashboard.newsSummary.enabled = false
openboxes.dashboard.receiptSummary.enabled = false
openboxes.dashboard.shipmentSummary.enabled = false
openboxes.identifier.product.format = 'LLNNN'  // overrides Constants.DEFAULT_PRODUCT_NUMBER_FORMAT='LLNN'
openboxes.identifier.purchaseOrder.format = "\${destinationPartyCode}PO\${sequenceNumber}"
openboxes.jobs.calculateQuantityJob.cronExpression = '0 0 0/6 * * ?'
openboxes.jobs.refreshDemandDataJob.cronExpression = '0 30 0 * * ?'
openboxes.locale.custom.enabled = false
openboxes.purchasing.approval.enabled = true
openboxes.purchasing.updateUnitPrice.enabled = true
openboxes.refreshAnalyticsDataOnStartup.enabled = false
openboxes.stockCard.consumption.reasonCodes = org.pih.warehouse.core.ReasonCode.list()

{% if inventory.get('openboxes', {}).get('hotjar') %}
openboxes.hotjar.enabled = {{ inventory.openboxes.hotjar.enabled }}
openboxes.hotjar.hjid = {{ inventory.openboxes.hotjar.identifier }}
openboxes.hotjar.hjsv = {{ inventory.openboxes.hotjar.snippetVersion }}