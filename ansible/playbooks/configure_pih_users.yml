- name: Enabling PIH user accounts
  hosts: all
  tasks:

    - name: Adding users
      ansible.builtin.user:
        create_home: true
        group: "{{ item.group }}"
        groups: "{{ item.groups }}"
        name: "{{ item.name }}"
        password: '!'
        system: "{{ item.system | bool }}"
        uid: "{{ item.uid }}"
      loop:
        - group: staff
          groups: tomcat
          name: jmiranda
          system: false
          uid: 1508
        - group: staff
          groups: tomcat
          name: soldevelo
          system: false
          uid: 1507
        - group: staff
          groups: tomcat
          name: anadolny
          system: false
          uid: 1506
        - group: staff
          groups: tomcat
          name: awalkowiak
          system: false
          uid: 1505
        - group: staff
          groups: tomcat
          name: drodzewicz
          system: false
          uid: 1504
        - group: staff
          groups: tomcat
          name: kchelstowski
          system: false
          uid: 1503
        - group: staff
          groups: tomcat
          name: kkrawczyk
          system: false
          uid: 1502
        - group: staff
          groups: tomcat
          name: jmbabazi
          system: false
          uid: 1501

    - name: Adding authorized public keys for non-system users
      when: 'lookup("ansible.builtin.fileglob", item.key_file) != []'
      ansible.posix.authorized_key:
        key: "{{ lookup('ansible.builtin.file', item.key_file) }}"
        state: present
        user: "{{ item.user }}"
      loop:
        - key_file: ../public_keys/anadolny_ed25519.pub
          user: anadolny
        - key_file: ../public_keys/awalkowiak_ed25519.pub
          user: awalkowiak
        - key_file: ../public_keys/drodzewicz_ed25519.pub
          user: drodzewicz
        - key_file: ../public_keys/jmiranda_ed25519.pub
          user: jmiranda
        - key_file: ../public_keys/kchelstowski_ed25519.pub
          user: kchelstowski
        - key_file: ../public_keys/kkrawczyk_ed25519.pub
          user: kkrawczyk
        - key_file: ../public_keys/jmbabazi_rsa.pub
          user: jmbabazi

    - name: Enabling sudo access for admin users
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
        validate: visudo -cf %s
      loop:
        - line: 'awalkowiak ALL=(ALL) NOPASSWD:ALL'
          regexp: '^awalkowiak'
        - line: 'jmbabazi ALL=(ALL) NOPASSWD:ALL'
          regexp: '^jmbabazi'
        - line: 'jmiranda ALL=(ALL) NOPASSWD:ALL'
          regexp: '^jmiranda'

    - name: Enabling sudo access for developers
      when: production is not defined or not production
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
        validate: visudo -cf %s
      loop:
        - line: 'dariusz ALL=(ALL) NOPASSWD:ALL'
          regexp: '^dariusz'
        - line: 'kchelstowski ALL=(ALL) NOPASSWD:ALL'
          regexp: '^kchelstowski'

    #
    # The following task ignores Tomcat best practices.
    #
    # > It is recommended to never grant the manager-script or
    # > manager-jmx roles to users that have the manager-gui role.
    #
    # https://tomcat.apache.org/tomcat-8.5-doc/manager-howto.html#Configuring_Manager_Application_Access
    #
    - name: Injecting Tomcat user for supply chain team
      ansible.builtin.lineinfile:
        insertbefore: '^</tomcat-users>'
        # originally from obnav.pih-emr.org:/etc/tomcat7/tomcat-users.xml
        line: '  <user username="supplychain" password="{{ tomcat_users.supplychain.password }}" roles="admin,admin-gui,manager-gui,manager-script,tomcat" /> <!-- ANSIBLE MANAGED -->'
        path: "/var/lib/{{ item }}/conf/tomcat-users.xml"
        regexp: 'username="supplychain"'
      loop:
        - tomcat7
        - tomcat85
