- name: Restoring OpenBoxes database (please allow 10-30+ minutes)
  hosts: dev dbstg
  tasks:

    - name: Ensuring explicit choice of host(s)
      run_once: true
      when: ansible_limit is not defined
      ansible.builtin.fail:
        msg: "you must use -l or --limit! If you really want to use all hosts, use -l 'all'"

    - name: Stopping Tomcat service
      ansible.builtin.systemd:
        daemon_reload: true
        name: tomcat
        state: stopped

    - name: Uploading archive to remote host (this can be slow)
      ansible.builtin.copy:
        dest: "{{ archive_file | basename }}"
        group: root
        mode: '0400'
        owner: root
        src: "{{ archive_file }}"

    - name: Importing mysql archive (this can be slow, too)
      register: restore_db
      ansible.builtin.script:
        cmd: |
          scripts/restore_db.bash \
          {{ '-f' if force else '' }} {{ '-s' if use_sudo else '' }} \
          -d {{ db_name }} -i {{ archive_file | basename }} -u {{ db_username }}
      environment:
        DB_PASSWORD: "{{ db_users[db_username].password }}"

    - name: Collecting script output
      when: restore_db.stdout_lines is defined
      ansible.builtin.debug:
        msg:
          - "{{ restore_db.stdout_lines | regex_replace(db_users[db_username].password, '********') }}"
          - "{{ restore_db.stderr_lines | regex_replace(db_users[db_username].password, '********') }}"

    - name: Deleting archive file from remote host after loading
      ansible.builtin.file:
        path: "{{ archive_file | basename }}"
        state: absent

    - name: Restarting MariaDB service
      ansible.builtin.systemd:
        daemon_reload: true
        name: mysql
        state: restarted

    - name: Restarting and verifying Tomcat on web-serving hosts
      when: webserver is defined
      block:
        - name: Restarting Tomcat service on web-serving hosts
          ansible.builtin.systemd:
            daemon_reload: true
            name: tomcat
            state: restarted
        - name: "Waiting for 200 from https://$remote_host{{ app_context }}"
          delay: 15
          retries: 60
          register: https_response
          until: https_response.status == 200
          ansible.builtin.uri:
            url: "https://{{ ansible_fqdn }}{{ app_context }}"

  vars:
    archive_file: build/archive_db/obnav/openboxes.tgz
    db_name: openboxes
    db_username: root
    force: false
    use_sudo: false
